["if (this.leadingComments != null)\n{\n  int[] range = (int[]) this.leadingComments.get(node);\n  foo();\n  if (range != null)\n  {\n    int length = range[1] - range[0] + 1;\n    Comment[] leadComments = new Comment[length];\n    System.arraycopy(this.comments, range[0], leadComments, 0, length);\n    return leadComments;\n  }\n}","if (this.leadingComments != null)\n{\n  int[] range = (int[]) this.leadingComments.get(node);\n  foo();\n  if (range != null)\n  {\n    int length = range[1] - range[0] + 1;\n    Comment[] leadComments = new Comment[length];\n    System.arraycopy(this.comments, range[0], leadComments, 0, length);\n    return leadComments;\n  }\n}","if (this.leadingComments != null)\n{\n  int[] range = (int[]) this.leadingComments.get(node);\n  foo();\n  if (range != null)\n  {\n    int length = range[1] - range[0] + 1;\n    Comment[] leadComments = new Comment[length];\n    System.arraycopy(this.comments, range[0], leadComments, 0, length);\n    return leadComments;\n  }\n}","if (this.leadingComments != null)\n{\n  int[] range = (int[]) this.leadingComments.get(node);\n  foo();\n  if (range != null)\n  {\n    return this.comments[range[0]].getStartPosition();\n  }\n}","if (this.leadingComments != null)\n{\n  int[] range = (int[]) this.leadingComments.get(node);\n  foo();\n  if (range != null)\n  {\n    int length = range[1] - range[0] + 1;\n    Comment[] leadComments = new Comment[length];\n    System.arraycopy(this.comments, range[0], leadComments, 0, length);\n    return (Comment[]) leadComments.clone();\n  }\n}"]
5
[IfThen (BinOp (FieldAccess (PrimaryFieldAccess This (Ident "leadingComments"))) NotEq (Lit Null)) (StmtBlock (Block [LocalVars [] (RefType (ArrayType (PrimType IntT))) [VarDecl (VarId (Ident "range")) (Just (InitExp (Cast (RefType (ArrayType (PrimType IntT))) (MethodInv (PrimaryMethodCall (FieldAccess (PrimaryFieldAccess This (Ident "leadingComments"))) [] (Ident "get") [ExpName (Name [Ident "node"])])))))],BlockStmt (ExpStmt (MethodInv (MethodCall (Name [Ident "foo"]) []))),BlockStmt (IfThen (BinOp (ExpName (Name [Ident "range"])) NotEq (Lit Null)) (StmtBlock (Block [LocalVars [] (PrimType IntT) [VarDecl (VarId (Ident "length")) (Just (InitExp (BinOp (BinOp (ArrayAccess (ArrayIndex (ExpName (Name [Ident "range"])) [Lit (Int 1)])) Sub (ArrayAccess (ArrayIndex (ExpName (Name [Ident "range"])) [Lit (Int 0)]))) Add (Lit (Int 1)))))],LocalVars [] (RefType (ArrayType (RefType (ClassRefType (ClassType [(Ident "Comment",[])]))))) [VarDecl (VarId (Ident "leadComments")) (Just (InitExp (ArrayCreate (RefType (ClassRefType (ClassType [(Ident "Comment",[])]))) [ExpName (Name [Ident "length"])] 0)))],BlockStmt (ExpStmt (MethodInv (MethodCall (Name [Ident "System",Ident "arraycopy"]) [FieldAccess (PrimaryFieldAccess This (Ident "comments")),ArrayAccess (ArrayIndex (ExpName (Name [Ident "range"])) [Lit (Int 0)]),ExpName (Name [Ident "leadComments"]),Lit (Int 0),ExpName (Name [Ident "length"])]))),BlockStmt (Return (Just (ExpName (Name [Ident "leadComments"]))))])))])),IfThen (BinOp (FieldAccess (PrimaryFieldAccess This (Ident "leadingComments"))) NotEq (Lit Null)) (StmtBlock (Block [LocalVars [] (RefType (ArrayType (PrimType IntT))) [VarDecl (VarId (Ident "range")) (Just (InitExp (Cast (RefType (ArrayType (PrimType IntT))) (MethodInv (PrimaryMethodCall (FieldAccess (PrimaryFieldAccess This (Ident "leadingComments"))) [] (Ident "get") [ExpName (Name [Ident "node"])])))))],BlockStmt (ExpStmt (MethodInv (MethodCall (Name [Ident "foo"]) []))),BlockStmt (IfThen (BinOp (ExpName (Name [Ident "range"])) NotEq (Lit Null)) (StmtBlock (Block [LocalVars [] (PrimType IntT) [VarDecl (VarId (Ident "length")) (Just (InitExp (BinOp (BinOp (ArrayAccess (ArrayIndex (ExpName (Name [Ident "range"])) [Lit (Int 1)])) Sub (ArrayAccess (ArrayIndex (ExpName (Name [Ident "range"])) [Lit (Int 0)]))) Add (Lit (Int 1)))))],LocalVars [] (RefType (ArrayType (RefType (ClassRefType (ClassType [(Ident "Comment",[])]))))) [VarDecl (VarId (Ident "leadComments")) (Just (InitExp (ArrayCreate (RefType (ClassRefType (ClassType [(Ident "Comment",[])]))) [ExpName (Name [Ident "length"])] 0)))],BlockStmt (ExpStmt (MethodInv (MethodCall (Name [Ident "System",Ident "arraycopy"]) [FieldAccess (PrimaryFieldAccess This (Ident "comments")),ArrayAccess (ArrayIndex (ExpName (Name [Ident "range"])) [Lit (Int 0)]),ExpName (Name [Ident "leadComments"]),Lit (Int 0),ExpName (Name [Ident "length"])]))),BlockStmt (Return (Just (ExpName (Name [Ident "leadComments"]))))])))])),IfThen (BinOp (FieldAccess (PrimaryFieldAccess This (Ident "leadingComments"))) NotEq (Lit Null)) (StmtBlock (Block [LocalVars [] (RefType (ArrayType (PrimType IntT))) [VarDecl (VarId (Ident "range")) (Just (InitExp (Cast (RefType (ArrayType (PrimType IntT))) (MethodInv (PrimaryMethodCall (FieldAccess (PrimaryFieldAccess This (Ident "leadingComments"))) [] (Ident "get") [ExpName (Name [Ident "node"])])))))],BlockStmt (ExpStmt (MethodInv (MethodCall (Name [Ident "foo"]) []))),BlockStmt (IfThen (BinOp (ExpName (Name [Ident "range"])) NotEq (Lit Null)) (StmtBlock (Block [LocalVars [] (PrimType IntT) [VarDecl (VarId (Ident "length")) (Just (InitExp (BinOp (BinOp (ArrayAccess (ArrayIndex (ExpName (Name [Ident "range"])) [Lit (Int 1)])) Sub (ArrayAccess (ArrayIndex (ExpName (Name [Ident "range"])) [Lit (Int 0)]))) Add (Lit (Int 1)))))],LocalVars [] (RefType (ArrayType (RefType (ClassRefType (ClassType [(Ident "Comment",[])]))))) [VarDecl (VarId (Ident "leadComments")) (Just (InitExp (ArrayCreate (RefType (ClassRefType (ClassType [(Ident "Comment",[])]))) [ExpName (Name [Ident "length"])] 0)))],BlockStmt (ExpStmt (MethodInv (MethodCall (Name [Ident "System",Ident "arraycopy"]) [FieldAccess (PrimaryFieldAccess This (Ident "comments")),ArrayAccess (ArrayIndex (ExpName (Name [Ident "range"])) [Lit (Int 0)]),ExpName (Name [Ident "leadComments"]),Lit (Int 0),ExpName (Name [Ident "length"])]))),BlockStmt (Return (Just (ExpName (Name [Ident "leadComments"]))))])))])),IfThen (BinOp (FieldAccess (PrimaryFieldAccess This (Ident "leadingComments"))) NotEq (Lit Null)) (StmtBlock (Block [LocalVars [] (RefType (ArrayType (PrimType IntT))) [VarDecl (VarId (Ident "range")) (Just (InitExp (Cast (RefType (ArrayType (PrimType IntT))) (MethodInv (PrimaryMethodCall (FieldAccess (PrimaryFieldAccess This (Ident "leadingComments"))) [] (Ident "get") [ExpName (Name [Ident "node"])])))))],BlockStmt (ExpStmt (MethodInv (MethodCall (Name [Ident "foo"]) []))),BlockStmt (IfThen (BinOp (ExpName (Name [Ident "range"])) NotEq (Lit Null)) (StmtBlock (Block [BlockStmt (Return (Just (MethodInv (PrimaryMethodCall (ArrayAccess (ArrayIndex (FieldAccess (PrimaryFieldAccess This (Ident "comments"))) [ArrayAccess (ArrayIndex (ExpName (Name [Ident "range"])) [Lit (Int 0)])])) [] (Ident "getStartPosition") []))))])))])),IfThen (BinOp (FieldAccess (PrimaryFieldAccess This (Ident "leadingComments"))) NotEq (Lit Null)) (StmtBlock (Block [LocalVars [] (RefType (ArrayType (PrimType IntT))) [VarDecl (VarId (Ident "range")) (Just (InitExp (Cast (RefType (ArrayType (PrimType IntT))) (MethodInv (PrimaryMethodCall (FieldAccess (PrimaryFieldAccess This (Ident "leadingComments"))) [] (Ident "get") [ExpName (Name [Ident "node"])])))))],BlockStmt (ExpStmt (MethodInv (MethodCall (Name [Ident "foo"]) []))),BlockStmt (IfThen (BinOp (ExpName (Name [Ident "range"])) NotEq (Lit Null)) (StmtBlock (Block [LocalVars [] (PrimType IntT) [VarDecl (VarId (Ident "length")) (Just (InitExp (BinOp (BinOp (ArrayAccess (ArrayIndex (ExpName (Name [Ident "range"])) [Lit (Int 1)])) Sub (ArrayAccess (ArrayIndex (ExpName (Name [Ident "range"])) [Lit (Int 0)]))) Add (Lit (Int 1)))))],LocalVars [] (RefType (ArrayType (RefType (ClassRefType (ClassType [(Ident "Comment",[])]))))) [VarDecl (VarId (Ident "leadComments")) (Just (InitExp (ArrayCreate (RefType (ClassRefType (ClassType [(Ident "Comment",[])]))) [ExpName (Name [Ident "length"])] 0)))],BlockStmt (ExpStmt (MethodInv (MethodCall (Name [Ident "System",Ident "arraycopy"]) [FieldAccess (PrimaryFieldAccess This (Ident "comments")),ArrayAccess (ArrayIndex (ExpName (Name [Ident "range"])) [Lit (Int 0)]),ExpName (Name [Ident "leadComments"]),Lit (Int 0),ExpName (Name [Ident "length"])]))),BlockStmt (Return (Just (Cast (RefType (ArrayType (RefType (ClassRefType (ClassType [(Ident "Comment",[])]))))) (MethodInv (MethodCall (Name [Ident "leadComments",Ident "clone"]) [])))))])))]))]
